// Generated by CoffeeScript 1.6.3
/*
Copyright 2013 Simon Lydell

This file is part of throws.

throws is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

throws is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with throws. If not,
see <http://www.gnu.org/licenses/>.
*/

var compare, parse, throws,
  __slice = [].slice;

parse = require("./parse");

compare = require("./compare");

throws = function() {
  var arg, args, error, errorConstructor, fn, test, _ref;
  test = arguments[0], fn = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
  switch (false) {
    case !(test instanceof Error):
      errorConstructor = test.constructor;
      break;
    case !((test != null ? test.prototype : void 0) instanceof Error || test === Error):
      errorConstructor = test;
      break;
    case typeof test !== "function":
      args.unshift(fn);
      fn = test;
      test = null;
      break;
    default:
      throw new TypeError("`test` must be an error instance (`test instanceof Error`),\nor an error constructor (a subclass of `Error` or `Error` itself).");
  }
  if (typeof fn !== "function") {
    throw new TypeError("`fn` must be a function.");
  }
  try {
    fn.apply(null, args);
    throws.messageHolder.message = "Expected function to throw";
    return false;
  } catch (_error) {
    error = _error;
    if (!test) {
      return true;
    }
  }
  arg = throws.parse((_ref = test.message) != null ? _ref : "", throws.splitChar);
  return throws.compare(error, errorConstructor, arg, throws.messageHolder);
};

throws.parse = parse;

throws.compare = compare;

throws.splitChar = "|";

throws.messageHolder = {};

module.exports = throws;
